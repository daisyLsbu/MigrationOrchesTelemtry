# day3
process to start:
open gns3
start the hosts
login to consoles
get ips:  192.168.122.210, 80, 82
ping all hosts from linux
cd TelemetryApplication/
source venv/bin/activate
python3 app.py 5002


open vscode
from orchestrator
source venv/bin/activate
test.html-> open with live server
update the node.sh file with the ip and ports
on terminal - run -> python3 collectDisplaytable.py 
check the webpage localhost: 127.0.0.1:5501
ctrl +c
try directly from browser ip: port
from vscode run 
python3 collectorAsync.py
check in flux db -- localhost: 8086







#day2
influx db installation :
https://medium.com/yavar/install-and-setup-influxdb-on-ubuntu-20-04-22-04-3d6e090ec70c
user: user/Password123../LSBU/telemetry
zTXBuom_LxYD98-9gcyyDw9mHsCrtJUVVUfwsoGBxzQ3DcqwFiamo9ZtPucDfRaWEkOi-yrnqU1WFse9M67Wng==
export INFLUXDB_TOKEN=eFTnKNbRWWdPmLpleqeLLhhMwkQP1FbBY1RaVPnbbDgEudRqrCNuW6Z5aVTyH2sRGMt5NgSF_Lv08PadOEKOuA==

installed docker
add to group 
docker run hello-world
docker run -it ubuntu:latest  ---- to pull the image from internet 

docker stop 
docker rm

starting the  same image again using image id


docker run -it 5a81c4b8502e

scp -r test ubuntu@192.168.122.210:/home/ubuntu/test/
#week2
#ping internet
ping 8.8.8.8
#install drivers for internet adapter
sudo apt install git dkms
git clone https://github.com/aircrack-ng/rtl8812au.git
cd rtl8812au
ls -lrt
sudo make dkms_install
sudo dkms status
#closing terminal
exit 0

sudo apt-get install python3-venv
------

#week1
#After installation : updatung and upgrading the system
sudo apt -y update ; sudo apt -y upgrade
#clear screen of the terminal
clear
#gns3 installation:
sudo add-apt-repository ppa:gns3/ppa
sudo dpkg --add-architecture i386
sudo apt update
sudo apt install gns3-iou
sudo apt update 
sudo apt install gns3-gui gns3-server
#installing docker
sudo apt -y install docker.io
#adding user to the groups 
sudo usermod -aG ubridge user
sudo usermod -aG libvirt user 
sudo usermod -aG kvm user
sudo usermod -aG wireshark user
sudo usermod -aG docker user
#restarting system
init 6












































https://luminisindia.com/it-networking-blog/167-learn-how-to-install-gns3-vm-and-link-with-latest-gns3-2-0

steps:
install windows
install vmware work station 
download gns3 vm and gns3 gui
installation of gns3 vm :: 
extract gns3 vm
open vmware 
file-open-sect path-open-add name = gns3 vm-path = gns3vm in document folder--import
edit vm::
setting-mem=8gb-pro=1-core=4-vt-x=yes
*upgrade 
installation of gns3 ui: 
start exe-install-next-agree-select=desktop and ui-path=..-nmap-agree-next-wireshark-
-putty->email-next-finish
config ui to connect to vm:
setup wizard- run on virtual box-select path-*localhost and 3080 port-select name created-processor =4-memory=8192-ok
nw setting in vmware:
hostonly and nat
security config: 
from vmware - vm-ok-security-user=gns3-pass=gns3-ok
installing PC image in gns3:
download from gns3-marketplace-appliance
for ubuntu cloud guest: amd64img -initdata nad actual image
for ubuntu desktop guest:ubuntu desktop guest 
file-import appliance-select image-install in gns vm-ok
for both docker image and the ubuntu cloud
for topology:
drag and drop 3 ubuntu cloud, 1 switch and NAT, connect all to switch using ethernet
start the hosts and open console for each one of them.
ping to check all are reachable and accessible to each other.
open gns3 as admin
ubuntu/ubuntu
ip a
192.168.200.131,  192.168.200.133,  192.168.200.134 -- 192.168.200.130
ping 8.8.8.8
ping all the host and gns3VM from the desktop

setup in each host:::
run buildset.sh  to get git clone
make repo public first

*sudo apt install python3.10-venv
* update both script

run setup.sh script

*pip install -r requirements.txt

run script run.sh

for orchestrator project:
from cmd line: install git
winget install --id Git.Git -e --source winget
make the repo public first
clone repo : git clone https://github.com/daisyLsbu/orchestrator.git
cd orchestrator
for windows:
from ext - python
install pip
pip install virtualenv
pip install -r requirement.txt
cd venv/Scripts
./activate : if doesnot allow, from powershell allow executionPolicy =all
pip upgrade
influx db installation: and setup 
cd -Path 'C:\Program Files\InfluxData\influxdb'
 ./influxd
collector-password123-telemetry

