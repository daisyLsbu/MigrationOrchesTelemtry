












































https://luminisindia.com/it-networking-blog/167-learn-how-to-install-gns3-vm-and-link-with-latest-gns3-2-0

steps:
install windows
install vmware work station 
download gns3 vm and gns3 gui
installation of gns3 vm :: 
extract gns3 vm
open vmware 
file-open-sect path-open-add name = gns3 vm-path = gns3vm in document folder--import
edit vm::
setting-mem=8gb-pro=1-core=4-vt-x=yes
*upgrade 
installation of gns3 ui: 
start exe-install-next-agree-select=desktop and ui-path=..-nmap-agree-next-wireshark-
-putty->email-next-finish
config ui to connect to vm:
setup wizard- run on virtual box-select path-*localhost and 3080 port-select name created-processor =4-memory=8192-ok
nw setting in vmware:
hostonly and nat
security config: 
from vmware - vm-ok-security-user=gns3-pass=gns3-ok
installing PC image in gns3:
download from gns3-marketplace-appliance
for ubuntu cloud guest: amd64img -initdata nad actual image
for ubuntu desktop guest:ubuntu desktop guest 
file-import appliance-select image-install in gns vm-ok
for both docker image and the ubuntu cloud
for topology:
drag and drop 3 ubuntu cloud, 1 switch and NAT, connect all to switch using ethernet
start the hosts and open console for each one of them.
ping to check all are reachable and accessible to each other.
open gns3 as admin
ubuntu/ubuntu
ip a
192.168.200.131,  192.168.200.133,  192.168.200.134 -- 192.168.200.130
ping 8.8.8.8
ping all the host and gns3VM from the desktop

setup in each host:::
run buildset.sh  to get git clone
make repo public first

*sudo apt install python3.10-venv
* update both script

run setup.sh script

*pip install -r requirements.txt

run script run.sh

for orchestrator project:
from cmd line: install git
winget install --id Git.Git -e --source winget
make the repo public first
clone repo : git clone https://github.com/daisyLsbu/orchestrator.git
cd orchestrator
for windows:
from ext - python
install pip
pip install virtualenv
pip install -r requirement.txt
cd venv/Scripts
./activate : if doesnot allow, from powershell allow executionPolicy =all
pip upgrade
influx db installation: and setup 
cd -Path 'C:\Program Files\InfluxData\influxdb'
 ./influxd
collector-password123-telemetry

